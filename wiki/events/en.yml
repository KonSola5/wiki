title: "Events"
description: "List of all Events"

intro: "This is a list of all events. It's possible that not all events are listed here, but this list will be updated regularly."
click: "Click on event ID to open its class and see information, fields, and methods."
event-types: "Event Types"
event-type-server: "Server"
startup: "Scripts go into the {st-s} folder. Startup scripts run once, at startup, on both the client and server. Most events that require registering or modifying something at game start (like custom blocks, items, and fluids) will be Startup events."
event-type-startup: "Startup"
server: "Scripts go into the {se-s} folder. It will be reloaded when you run `/reload` command. Server events are always accessible, even in single-player worlds. Most events that make changes to the world while the game is running (such as breaking blocks, teleporting players, or adding recipes) will go here."
event-type-client: "Client"
client: "Scripts go into the {cl-s} folder. Will be reloaded when you press `F3+T`. Most changes that are per-client (such as resource packs, Painter, and JEI) are client events."
folder: "Folder"
event: "Event"
has-result: "Has Result"

ingredient: "`[js]Ingredient`"

ingredient-item-wrappable: |
  - A string representing an item (`[js]'minecraft:stone'`),
  - A string representing a tag (`[js]'#minecraft:logs'`)
  - A string representing a mod (`[js]'@minecraft'`)
  - A string representing a creative mod tab (`[js]`),
  - A [`[js]RegExp`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp) - the resulting `[js]Ingredient` is any item whose ID matches a given regular expression,
  - An `[js]ItemStack`,
  - An object: `[js]{ item: ItemStack }` where `[js]ItemStack` stands for anything wrappable to an `[js]ItemStack`

ingredient-item-multi-wrappable: |
  - A string representing both item and count (`[js]'2x minecraft:stone'`)
  - An object: `[js]{ item: ItemStack, count: number }` where `[js]ItemStack` stands for anything wrappable to an `[js]ItemStack` and `[js]number` stands for any integer number
  {ingredient-item-wrapable}

itemstack: "`[js]ItemStack`"

# There may be a string wrappable into an item with NBT, but unsure what the syntax for that is.

itemstack-wrappable: |
  - A string representing an item (`[js]'minecraft:stone'`)
  - A string representing both item and count (`[js]'2x minecraft:stone'`)
  - An object:
  ```js
    {
      item: Item, // or anything wrappable to Item
      count: number, // integer number
      nbt: CompoundTag, // or anything wrappable to CompoundTag
    }
  ```
  - A [`[js]RegExp`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp)

item-wrappable: |
  - A string representing an item (`[js]'minecraft:stone'`)